map "http://fhir.ch/ig/ch-alis/StructureMap/Alis43ToBundle" = "Alis43ToBundle"

// Convert ALIS43 XML to a Bundle according to the ch-alis implmementation guie
// 2020-12-03 Oliver Egger, copyright ahdis ag, Apache License 
// FHIR: http://hl7.org/fhir/r4/

uses "http://fhir.ch/ig/ch-alis/StructureDefinition/Header" alias Header as source
uses "http://hl7.org/fhir/StructureDefinition/Bundle" alias Bundle as target
uses "http://hl7.org/fhir/StructureDefinition/MessageHeader" alias Bundle as target

group Alis43ToBundle(source header : Header, target bundle : Bundle) {
  header ->  bundle.entry as e, 
             e.resource = create('MessageHeader') as messageHeader, 
             messageHeader.id = uuid() as uuid,
             e.fullUrl = append('urn:uuid:',uuid),
             bundle.entry as e2, 
             e2.resource = create('Bundle') as transactionBundle,
             transactionBundle.id = uuid() as uuid2,
             e2.fullUrl = append('urn:uuid:',uuid2)
             then {
               header then Alis43ToMessageHeader(header, messageHeader, transactionBundle) "messageHeader";
               header then Alis43ToBundleTransaction(header, transactionBundle) "bundleTransaction";
             } "bundle";
    header -> bundle.type = 'message' "type";
    header.FileCreationDate as fileCreationDate then {
        fileCreationDate as date -> bundle.timestamp = date "date";
    } "FileCreationDate";
}

group Alis43ToMessageHeader(source header : Header, target messageHeader: MessageHeader, target transactionBundle : Bundle) {
    // ISSUE1: should be link to a MessageDefinition or a code?
    header -> messageHeader.event = create('uri') as value, value.value = 'http://fhir.ch/ig/ch-alis-43' "eventUri";
    // ISSUE2: MessageControlID cannot be id of entry, needs to be either fullUrl oder uuid, need to map this to an identifier
    header -> messageHeader.source as source then {
        header.SoftwareReleaseNumber as version -> source.version = version "version";
    // ISSUE3:
    } "source";
}

group Alis43ToBundleTransaction(source header : Header, target transactionBundle : Bundle) {
}